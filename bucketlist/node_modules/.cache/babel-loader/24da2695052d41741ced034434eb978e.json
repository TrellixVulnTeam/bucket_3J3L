{"ast":null,"code":"var _jsxFileName = \"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Link, Route, Routes, useNavigate, Router } from \"react-router-dom\"; // import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\n\nimport BucketList from \"./BucketList\";\nimport styled from \"styled-components\";\nimport Detail from \"./Detail\"; // 클래스형 컴포넌트는 이렇게 생겼습니다!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const initialState = {\n    list: [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"]\n  };\n  const [state, setState] = useState(initialState);\n  const text = useRef();\n\n  const addBucketList = () => {\n    let list = state;\n    const new_item = text.current.value; // 리액트에서는 concat으로 배열항목을 합쳐주는 게 좋아요. 아래처럼요!\n    // list = list.concat(new_item);\n    // this.setState({list: list});\n    //  이건 가장 편한 배열 합치기 방법입니다.\n    //  ...은 배열 안에 있는 항목을 전부 꺼내서 늘어놓는다는 뜻입니다. (스프레드 문법이라고 불러요.)\n\n    setState({\n      list: [...list, new_item]\n    });\n  }; // 랜더 함수 안에 리액트 엘리먼트를 넣어줍니다!\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uB0B4 \\uBC84\\uD0B7\\uB9AC\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(BucketList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/detail\",\n            element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBucketList,\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"k2EAgSpzUIVKb3cCNW5KVhGwuS0=\");\n\n_c = App;\nconst Input = styled.div`\n  max-width: 350px;\n  min-height: 10vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n`;\n_c2 = Input;\nconst Container = styled.div`\n  max-width: 350px;\n  min-height: 60vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n`;\n_c3 = Container;\nconst Title = styled.h1`\n  color: slateblue;\n  text-align: center;\n`;\n_c4 = Title;\nconst Line = styled.hr`\n  margin: 16px 0px;\n  border: 1px dotted #ddd;\n`;\n_c5 = Line;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Line\");","map":{"version":3,"names":["React","useRef","useState","Link","Route","Routes","useNavigate","Router","BucketList","styled","Detail","App","initialState","list","state","setState","text","addBucketList","new_item","current","value","Input","div","Container","Title","h1","Line","hr"],"sources":["/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/App.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Link, Route, Routes, useNavigate, Router } from \"react-router-dom\";\n\n// import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\nimport BucketList from \"./BucketList\";\nimport styled from \"styled-components\";\nimport Detail from \"./Detail\";\n\n// 클래스형 컴포넌트는 이렇게 생겼습니다!\nconst App = () => {\n\n  const initialState = {list:[\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"]};\n  const [state, setState] = useState(initialState);\n  const text = useRef();\n  const addBucketList = () => {\n    let list = state;\n    \n\n    const new_item = text.current.value;\n\n    // 리액트에서는 concat으로 배열항목을 합쳐주는 게 좋아요. 아래처럼요!\n    // list = list.concat(new_item);\n    // this.setState({list: list});\n\n    //  이건 가장 편한 배열 합치기 방법입니다.\n    //  ...은 배열 안에 있는 항목을 전부 꺼내서 늘어놓는다는 뜻입니다. (스프레드 문법이라고 불러요.)\n    setState({ list: [...list, new_item] });\n  };\n\n  // 랜더 함수 안에 리액트 엘리먼트를 넣어줍니다!\n  \n  return (\n    <div className=\"App\">\n      <Container>\n        <Title>내 버킷리스트</Title>\n        <Line />\n        {/* 컴포넌트를 넣어줍니다. */}\n        {/* <컴포넌트 명 [props 명]={넘겨줄 것(리스트, 문자열, 숫자, ...)}/> */}\n        {/* Route 쓰는 법 2가지를 모두 써봅시다! */}\n        <Router>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<BucketList />}\n            />\n            <Route path=\"/detail\" element={<Detail />}/>\n          </Routes>\n        </Router>\n      </Container>\n      {/* 인풋박스와 추가하기 버튼을 넣어줬어요. */}\n      <Input>\n        <input type=\"text\" ref={text} />\n        <button onClick={addBucketList}>추가하기</button>\n      </Input>\n    </div>\n  );\n  \n}\n\nconst Input = styled.div`\n  max-width: 350px;\n  min-height: 10vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n`;\n\nconst Container = styled.div`\n  max-width: 350px;\n  min-height: 60vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n`;\n\nconst Title = styled.h1`\n  color: slateblue;\n  text-align: center;\n`;\n\nconst Line = styled.hr`\n  margin: 16px 0px;\n  border: 1px dotted #ddd;\n`;\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,kBAAzD,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAMC,YAAY,GAAG;IAACC,IAAI,EAAC,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB;EAAN,CAArB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACU,YAAD,CAAlC;EACA,MAAMI,IAAI,GAAGf,MAAM,EAAnB;;EACA,MAAMgB,aAAa,GAAG,MAAM;IAC1B,IAAIJ,IAAI,GAAGC,KAAX;IAGA,MAAMI,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAaC,KAA9B,CAJ0B,CAM1B;IACA;IACA;IAEA;IACA;;IACAL,QAAQ,CAAC;MAAEF,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAUK,QAAV;IAAR,CAAD,CAAR;EACD,CAbD,CALgB,CAoBhB;;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,SAAD;MAAA,wBACE,QAAC,KAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAME,QAAC,MAAD;QAAA,uBACE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YACE,IAAI,EAAC,GADP;YAEE,OAAO,eAAE,QAAC,UAAD;cAAA;cAAA;cAAA;YAAA;UAFX;YAAA;YAAA;YAAA;UAAA,QADF,eAKE,QAAC,KAAD;YAAO,IAAI,EAAC,SAAZ;YAAsB,OAAO,eAAE,QAAC,MAAD;cAAA;cAAA;cAAA;YAAA;UAA/B;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAkBE,QAAC,KAAD;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,GAAG,EAAEF;MAAxB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEC,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CAhDD;;GAAMN,G;;KAAAA,G;AAkDN,MAAMU,KAAK,GAAGZ,MAAM,CAACa,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,K;AAUN,MAAME,SAAS,GAAGd,MAAM,CAACa,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,S;AAUN,MAAMC,KAAK,GAAGf,MAAM,CAACgB,EAAG;AACxB;AACA;AACA,CAHA;MAAMD,K;AAKN,MAAME,IAAI,GAAGjB,MAAM,CAACkB,EAAG;AACvB;AACA;AACA,CAHA;MAAMD,I;AAKN,eAAef,GAAf"},"metadata":{},"sourceType":"module"}