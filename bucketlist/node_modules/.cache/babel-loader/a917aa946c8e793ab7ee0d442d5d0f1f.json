{"ast":null,"code":"var _jsxFileName = \"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/Detail.js\",\n    _s = $RefreshSig$();\n\n// 리액트 패키지를 불러옵니다.\nimport React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\"; // redux hook을 불러옵니다.\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBucket, doneBucket, isLoaded } from \"./redux/modules/bucket\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { addDoc, collection, deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Detail = props => {\n  _s();\n\n  var _bucket_list$dataIdx;\n\n  // 1. useLocation 훅 취득\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  let dataIdx = location.search.substring(1); // 스토어에서 상태값 가져오기\n\n  const bucket_list = useSelector(state => state.bucket.list);\n\n  const delList = () => {\n    deleteDoc(doc(db, \"bucket_list\", bucket_list[dataIdx].id));\n    dispatch(deleteBucket(bucket_list[dataIdx].id));\n    dispatch(isLoaded(true));\n    navigate(-1);\n  };\n\n  const todoDone = () => {\n    updateDoc(doc(db, \"bucket_list\", bucket_list[dataIdx].id), {\n      completed: true\n    });\n    dispatch(doneBucket(bucket_list[dataIdx].id));\n    dispatch(isLoaded(true));\n    navigate(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [dataIdx, \" \\uBC88\\uC9F8 \\uC0C1\\uC138 \\uD398\\uC774\\uC9C0\\uC785\\uB2C8\\uB2E4! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoText, {\n      children: (_bucket_list$dataIdx = bucket_list[dataIdx]) === null || _bucket_list$dataIdx === void 0 ? void 0 : _bucket_list$dataIdx.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: todoDone,\n        children: \"\\uC644\\uB8CC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: delList,\n        children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Detail, \"mywj0jnUYUwNTM28iIIp5e2SSIo=\", false, function () {\n  return [useLocation, useDispatch, useNavigate, useSelector];\n});\n\n_c = Detail;\nconst TodoText = styled.div`\n    border-radius: 3px;\n    padding: 5px;\n    margin-bottom: 10px;\n`;\n_c2 = TodoText;\nexport default Detail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Detail\");\n$RefreshReg$(_c2, \"TodoText\");","map":{"version":3,"names":["React","useLocation","useNavigate","useDispatch","useSelector","deleteBucket","doneBucket","isLoaded","Button","ButtonGroup","addDoc","collection","deleteDoc","doc","updateDoc","db","styled","Detail","props","location","dispatch","navigate","dataIdx","search","substring","bucket_list","state","bucket","list","delList","id","todoDone","completed","text","TodoText","div"],"sources":["/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/Detail.js"],"sourcesContent":["// 리액트 패키지를 불러옵니다.\nimport React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n// redux hook을 불러옵니다.\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBucket, doneBucket, isLoaded } from \"./redux/modules/bucket\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nimport { addDoc, collection, deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport styled from \"styled-components\";\n\nconst Detail = (props) => {\n    // 1. useLocation 훅 취득\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    let dataIdx = location.search.substring(1);\n\n    // 스토어에서 상태값 가져오기\n    const bucket_list = useSelector((state) => state.bucket.list);\n\n    const delList = () => {\n        deleteDoc(doc(db, \"bucket_list\", bucket_list[dataIdx].id));\n        dispatch(deleteBucket(bucket_list[dataIdx].id));\n        dispatch(isLoaded(true));\n        navigate(-1);\n    };\n\n    const todoDone = () => {\n        updateDoc(doc(db, \"bucket_list\", bucket_list[dataIdx].id), { completed: true });\n        dispatch(doneBucket(bucket_list[dataIdx].id));\n        dispatch(isLoaded(true));\n        navigate(-1);\n    };\n\n    return (\n        <>\n            <h1>{dataIdx} 번째 상세 페이지입니다! </h1>\n            <TodoText>{bucket_list[dataIdx]?.text}</TodoText>\n            <ButtonGroup>\n                <Button onClick={todoDone}>완료하기</Button>\n                <Button onClick={delList}>삭제하기</Button>\n            </ButtonGroup>\n        </>\n    );\n};\n\nconst TodoText = styled.div`\n    border-radius: 3px;\n    padding: 5px;\n    margin-bottom: 10px;\n`;\n\nexport default Detail;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAmD,wBAAnD;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,EAAwCC,GAAxC,EAA6CC,SAA7C,QAA8D,oBAA9D;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EAAA;;EACtB;EACA,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;EACA,MAAMmB,QAAQ,GAAGjB,WAAW,EAA5B;EACA,MAAMkB,QAAQ,GAAGnB,WAAW,EAA5B;EACA,IAAIoB,OAAO,GAAGH,QAAQ,CAACI,MAAT,CAAgBC,SAAhB,CAA0B,CAA1B,CAAd,CALsB,CAOtB;;EACA,MAAMC,WAAW,GAAGrB,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA/B;;EAEA,MAAMC,OAAO,GAAG,MAAM;IAClBjB,SAAS,CAACC,GAAG,CAACE,EAAD,EAAK,aAAL,EAAoBU,WAAW,CAACH,OAAD,CAAX,CAAqBQ,EAAzC,CAAJ,CAAT;IACAV,QAAQ,CAACf,YAAY,CAACoB,WAAW,CAACH,OAAD,CAAX,CAAqBQ,EAAtB,CAAb,CAAR;IACAV,QAAQ,CAACb,QAAQ,CAAC,IAAD,CAAT,CAAR;IACAc,QAAQ,CAAC,CAAC,CAAF,CAAR;EACH,CALD;;EAOA,MAAMU,QAAQ,GAAG,MAAM;IACnBjB,SAAS,CAACD,GAAG,CAACE,EAAD,EAAK,aAAL,EAAoBU,WAAW,CAACH,OAAD,CAAX,CAAqBQ,EAAzC,CAAJ,EAAkD;MAAEE,SAAS,EAAE;IAAb,CAAlD,CAAT;IACAZ,QAAQ,CAACd,UAAU,CAACmB,WAAW,CAACH,OAAD,CAAX,CAAqBQ,EAAtB,CAAX,CAAR;IACAV,QAAQ,CAACb,QAAQ,CAAC,IAAD,CAAT,CAAR;IACAc,QAAQ,CAAC,CAAC,CAAF,CAAR;EACH,CALD;;EAOA,oBACI;IAAA,wBACI;MAAA,WAAKC,OAAL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAA,kCAAWG,WAAW,CAACH,OAAD,CAAtB,yDAAW,qBAAsBW;IAAjC;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,WAAD;MAAA,wBACI,QAAC,MAAD;QAAQ,OAAO,EAAEF,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAQ,OAAO,EAAEF,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA,gBADJ;AAUH,CAlCD;;GAAMZ,M;UAEehB,W,EACAE,W,EACAD,W,EAIGE,W;;;KARlBa,M;AAoCN,MAAMiB,QAAQ,GAAGlB,MAAM,CAACmB,GAAI;AAC5B;AACA;AACA;AACA,CAJA;MAAMD,Q;AAMN,eAAejB,MAAf"},"metadata":{},"sourceType":"module"}