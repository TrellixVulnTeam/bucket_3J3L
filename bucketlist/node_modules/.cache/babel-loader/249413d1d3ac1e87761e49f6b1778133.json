{"ast":null,"code":"var _jsxFileName = \"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { connect, Connect, useDispatch } from \"react-redux\";\nimport { createBucket, loadBucket } from \"./redux/modules/bucket\";\nimport { addDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\"; // import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\n\nimport BucketList from \"./BucketList\";\nimport styled from \"styled-components\";\nimport Detail from \"./Detail\";\nimport NotFound from \"./NotFound\";\nimport Progress from \"./Progress\"; // 이 함수는 스토어가 가진 상태값을 props로 받아오기 위한 함수예요.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateTopProps = state => ({\n  bucket_list: state.bucket.list\n}); // 이 함수는 값을 변화시키기 위한 액션 생성 함수를 props로 받아오기 위한 함수예요.\n\n\nconst mapDispatchToProps = dispatch => ({\n  load: () => {\n    dispatch(loadBucket());\n  },\n  create: new_item => {\n    console.log(new_item);\n    dispatch(createBucket(new_item));\n  }\n}); // 클래스형 컴포넌트는 이렇게 생겼습니다!\n\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let bucket_data = [];\n    const querySnapshot = getDocs(collection(db, \"bucket_list\"));\n    querySnapshot.then(function (data) {\n      data.forEach(doc => {\n        if (doc.exists) {\n          bucket_data = [...bucket_data, {\n            id: doc.id,\n            ...doc.data()\n          }];\n        }\n\n        console.log(bucket_data);\n        dispatch(loadBucket(bucket_data));\n      });\n    }); // [] 디펜던시가 없다면 componentDidMount, componentDidUpdate 호출 (업데이트 될때마다 호출)\n    // [] 디펜던시가 있다면 위 function은 componentDidMount 일때만 호출 (componentDidMount 일때 한번만 실행)\n\n    return () => {\n      console.log(\"컴포넌트가 화면에서 사라짐\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uB0B4 \\uBC84\\uD0B7\\uB9AC\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(BucketList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/detail\",\n          element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 52\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \":id\",\n            element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nconst Input = styled.div`\n    max-width: 350px;\n    min-height: 10vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\nconst Container = styled.div`\n    max-width: 350px;\n    min-height: 60vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n_c2 = Container;\nconst Title = styled.h1`\n    color: slateblue;\n    text-align: center;\n`;\n_c3 = Title;\nconst Line = styled.hr`\n    margin: 16px 0px;\n    border: 1px dotted #ddd;\n`;\n_c4 = Line;\nexport default connect(mapStateTopProps, mapDispatchToProps)(App);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Line\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Route","Routes","useLocation","connect","Connect","useDispatch","createBucket","loadBucket","addDoc","collection","getDocs","db","BucketList","styled","Detail","NotFound","Progress","mapStateTopProps","state","bucket_list","bucket","list","mapDispatchToProps","dispatch","load","create","new_item","console","log","App","bucket_data","querySnapshot","then","data","forEach","doc","exists","id","Input","div","Container","Title","h1","Line","hr"],"sources":["/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { connect, Connect, useDispatch } from \"react-redux\";\nimport { createBucket, loadBucket } from \"./redux/modules/bucket\";\nimport { addDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\n// import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\nimport BucketList from \"./BucketList\";\nimport styled from \"styled-components\";\nimport Detail from \"./Detail\";\nimport NotFound from \"./NotFound\";\nimport Progress from \"./Progress\";\n\n// 이 함수는 스토어가 가진 상태값을 props로 받아오기 위한 함수예요.\nconst mapStateTopProps = (state) => ({\n    bucket_list: state.bucket.list,\n});\n\n// 이 함수는 값을 변화시키기 위한 액션 생성 함수를 props로 받아오기 위한 함수예요.\nconst mapDispatchToProps = (dispatch) => ({\n    load: () => {\n        dispatch(loadBucket());\n    },\n    create: (new_item) => {\n        console.log(new_item);\n        dispatch(createBucket(new_item));\n    },\n});\n\n// 클래스형 컴포넌트는 이렇게 생겼습니다!\nconst App = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let bucket_data = [];\n        const querySnapshot = getDocs(collection(db, \"bucket_list\"));\n\n        querySnapshot.then(function (data) {\n            data.forEach((doc) => {\n                if (doc.exists) {\n                    bucket_data = [...bucket_data, { id: doc.id, ...doc.data() }];\n                }\n                console.log(bucket_data);\n                dispatch(loadBucket(bucket_data));\n            });\n        });\n\n        // [] 디펜던시가 없다면 componentDidMount, componentDidUpdate 호출 (업데이트 될때마다 호출)\n        // [] 디펜던시가 있다면 위 function은 componentDidMount 일때만 호출 (componentDidMount 일때 한번만 실행)\n\n        return () => {\n            console.log(\"컴포넌트가 화면에서 사라짐\");\n        };\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Container>\n                <Title>내 버킷리스트</Title>\n                <Progress />\n                <Line />\n                {/* 컴포넌트를 넣어줍니다. */}\n                {/* <컴포넌트 명 [props 명]={넘겨줄 것(리스트, 문자열, 숫자, ...)}/> */}\n                {/* Route 쓰는 법 2가지를 모두 써봅시다! */}\n                <Routes>\n                    <Route path=\"/\" element={<BucketList />} />\n                    <Route path=\"/detail\" element={<Detail />}>\n                        <Route path=\":id\" element={<Detail />} />\n                    </Route>\n                    <Route path={\"*\"} element={<NotFound />} />\n                </Routes>\n            </Container>\n        </div>\n    );\n};\n\nconst Input = styled.div`\n    max-width: 350px;\n    min-height: 10vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n\nconst Container = styled.div`\n    max-width: 350px;\n    min-height: 60vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n\nconst Title = styled.h1`\n    color: slateblue;\n    text-align: center;\n`;\n\nconst Line = styled.hr`\n    margin: 16px 0px;\n    border: 1px dotted #ddd;\n`;\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}