{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _objectSpread from\"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useEffect,useRef,useState}from\"react\";import{Route,Routes,useLocation}from\"react-router-dom\";import{connect,Connect,useDispatch,useSelector}from\"react-redux\";import{createBucket,isLoaded,loadBucket}from\"./redux/modules/bucket\";import{addDoc,collection,getDocs}from\"firebase/firestore\";import{db}from\"./firebase\";// import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\nimport BucketList from\"./BucketList\";import styled from\"styled-components\";import Detail from\"./Detail\";import NotFound from\"./NotFound\";import Progress from\"./Progress\";import Spinner from\"./Spinner\";// 이 함수는 스토어가 가진 상태값을 props로 받아오기 위한 함수예요.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mapStateTopProps=function mapStateTopProps(state){return{bucket_list:state.bucket.list};};// 이 함수는 값을 변화시키기 위한 액션 생성 함수를 props로 받아오기 위한 함수예요.\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{load:function load(){dispatch(loadBucket());},create:function create(new_item){console.log(new_item);dispatch(createBucket(new_item));}};};// 클래스형 컴포넌트는 이렇게 생겼습니다!\nvar App=function App(){var dispatch=useDispatch();//const bucket_list = useSelector((state) => state.bucket.list);\nvar is_Loaded=useSelector(function(state){return state.bucket.is_Loaded;});useEffect(function(){var bucket_data=[];var querySnapshot=getDocs(collection(db,\"bucket_list\"));querySnapshot.then(function(data){data.forEach(function(doc){if(doc.exists){bucket_data=[].concat(_toConsumableArray(bucket_data),[_objectSpread({id:doc.id},doc.data())]);}});dispatch(loadBucket(bucket_data));dispatch(isLoaded(true));});// [] 디펜던시가 없다면 componentDidMount, componentDidUpdate 호출 (업데이트 될때마다 호출)\n// [] 디펜던시가 있다면 위 function은 componentDidMount 일때만 호출 (componentDidMount 일때 한번만 실행)\nreturn function(){console.log(\"컴포넌트가 화면에서 사라짐\");};},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uB0B4 \\uBC84\\uD0B7\\uB9AC\\uC2A4\\uD2B8\"}),/*#__PURE__*/_jsx(Progress,{}),/*#__PURE__*/_jsx(Line,{}),!is_Loaded?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(BucketList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/detail\",element:/*#__PURE__*/_jsx(Detail,{}),children:/*#__PURE__*/_jsx(Route,{path:\":id\",element:/*#__PURE__*/_jsx(Detail,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})})]})]})});};var Input=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    max-width: 350px;\\n    min-height: 10vh;\\n    background-color: #fff;\\n    padding: 16px;\\n    margin: 20px auto;\\n    border-radius: 5px;\\n    border: 1px solid #ddd;\\n\"])));var Container=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    max-width: 350px;\\n    min-height: 60vh;\\n    background-color: #fff;\\n    padding: 16px;\\n    margin: 20px auto;\\n    border-radius: 5px;\\n    border: 1px solid #ddd;\\n\"])));var Title=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    color: slateblue;\\n    text-align: center;\\n\"])));var Line=styled.hr(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    margin: 16px 0px;\\n    border: 1px dotted #ddd;\\n\"])));export default connect(mapStateTopProps,mapDispatchToProps)(App);","map":{"version":3,"names":["React","useEffect","useRef","useState","Route","Routes","useLocation","connect","Connect","useDispatch","useSelector","createBucket","isLoaded","loadBucket","addDoc","collection","getDocs","db","BucketList","styled","Detail","NotFound","Progress","Spinner","mapStateTopProps","state","bucket_list","bucket","list","mapDispatchToProps","dispatch","load","create","new_item","console","log","App","is_Loaded","bucket_data","querySnapshot","then","data","forEach","doc","exists","id","Input","div","Container","Title","h1","Line","hr"],"sources":["/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { connect, Connect, useDispatch, useSelector } from \"react-redux\";\nimport { createBucket, isLoaded, loadBucket } from \"./redux/modules/bucket\";\nimport { addDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\n// import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\nimport BucketList from \"./BucketList\";\nimport styled from \"styled-components\";\nimport Detail from \"./Detail\";\nimport NotFound from \"./NotFound\";\nimport Progress from \"./Progress\";\nimport Spinner from \"./Spinner\";\n\n// 이 함수는 스토어가 가진 상태값을 props로 받아오기 위한 함수예요.\nconst mapStateTopProps = (state) => ({\n    bucket_list: state.bucket.list,\n});\n\n// 이 함수는 값을 변화시키기 위한 액션 생성 함수를 props로 받아오기 위한 함수예요.\nconst mapDispatchToProps = (dispatch) => ({\n    load: () => {\n        dispatch(loadBucket());\n    },\n    create: (new_item) => {\n        console.log(new_item);\n        dispatch(createBucket(new_item));\n    },\n});\n\n// 클래스형 컴포넌트는 이렇게 생겼습니다!\nconst App = () => {\n    const dispatch = useDispatch();\n    //const bucket_list = useSelector((state) => state.bucket.list);\n    let is_Loaded = useSelector((state) => state.bucket.is_Loaded);\n\n    useEffect(() => {\n        let bucket_data = [];\n        const querySnapshot = getDocs(collection(db, \"bucket_list\"));\n\n        querySnapshot.then(function (data) {\n            data.forEach((doc) => {\n                if (doc.exists) {\n                    bucket_data = [...bucket_data, { id: doc.id, ...doc.data() }];\n                }\n            });\n            dispatch(loadBucket(bucket_data));\n            dispatch(isLoaded(true));\n        });\n\n        // [] 디펜던시가 없다면 componentDidMount, componentDidUpdate 호출 (업데이트 될때마다 호출)\n        // [] 디펜던시가 있다면 위 function은 componentDidMount 일때만 호출 (componentDidMount 일때 한번만 실행)\n\n        return () => {\n            console.log(\"컴포넌트가 화면에서 사라짐\");\n        };\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Container>\n                <Title>내 버킷리스트</Title>\n                <Progress />\n                <Line />\n                {/* 컴포넌트를 넣어줍니다. */}\n                {/* <컴포넌트 명 [props 명]={넘겨줄 것(리스트, 문자열, 숫자, ...)}/> */}\n                {/* Route 쓰는 법 2가지를 모두 써봅시다! */}\n                {!is_Loaded ? (\n                    <Spinner />\n                ) : (\n                    <Routes>\n                        <Route path=\"/\" element={<BucketList />} />\n                        <Route path=\"/detail\" element={<Detail />}>\n                            <Route path=\":id\" element={<Detail />} />\n                        </Route>\n                        <Route path={\"*\"} element={<NotFound />} />\n                    </Routes>\n                )}\n            </Container>\n        </div>\n    );\n};\n\nconst Input = styled.div`\n    max-width: 350px;\n    min-height: 10vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n\nconst Container = styled.div`\n    max-width: 350px;\n    min-height: 60vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n\nconst Title = styled.h1`\n    color: slateblue;\n    text-align: center;\n`;\n\nconst Line = styled.hr`\n    margin: 16px 0px;\n    border: 1px dotted #ddd;\n`;\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}