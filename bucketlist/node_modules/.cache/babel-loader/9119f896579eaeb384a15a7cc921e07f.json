{"ast":null,"code":"var _jsxFileName = \"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/BucketList.js\",\n    _s = $RefreshSig$();\n\n// 리액트 패키지를 불러옵니다.\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\"; // redux hook을 불러옵니다.\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createBucket, deleteBucket } from \"./redux/modules/bucket\";\nimport { addDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet bucket_data = [];\nconst querySnapshot = getDocs(collection(db, \"bucket_list\"));\nquerySnapshot.then(async function (data) {\n  await data.forEach(doc => {\n    if (doc.exists) {\n      bucket_data = [...bucket_data, { ...doc.data()\n      }];\n    }\n\n    console.log(bucket_data);\n  });\n});\nconsole.log(\"나오나\", bucket_data);\n\nconst BucketList = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"컴포넌트가 화면에 나타남\");\n    return () => {\n      console.log(\"컴포넌트가 화면에서 사라짐\");\n    };\n  }, []); // 버킷리스트를 리덕스 훅으로 가져오기\n\n  const bucket_list = useSelector(state => state.bucket.list); //const initialState = [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"];\n  //const [list, setList] = useState(initialState);\n  // const addTodo = () => {\n  //     setList([...list, todoInput.current.value]);\n  //     console.log(list)\n  // }\n\n  const todoInput = useRef();\n\n  const addTodoDispatch = () => {\n    //dispatch(createBucket(todoInput.current.value));\n    addDoc(collection(db, \"bucket_list\"), {\n      text: todoInput.current.value,\n      completed: false\n    });\n    todoInput.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListStyle, {\n      children: [console.log(bucket_data), bucket_data.map((list, index) => {\n        return /*#__PURE__*/_jsxDEV(ItemStyle, {\n          className: \"list_item\",\n          color: list.completed ? \"orange\" : \"aliceblue\",\n          onClick: () => {\n            navigate(`detail?${index}`);\n          },\n          children: list.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: todoInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodoDispatch,\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BucketList, \"YarQA1puNerC8Cdnll9CFfSI3Ps=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = BucketList;\nconst ListStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`;\n_c2 = ListStyle;\nconst ItemStyle = styled.div`\n    padding: 16px;\n    margin: 8px;\n    background-color: ${props => props.color};\n`;\n_c3 = ItemStyle;\nconst Input = styled.div`\n    max-width: 350px;\n    min-height: 10vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n_c4 = Input;\nexport default BucketList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BucketList\");\n$RefreshReg$(_c2, \"ListStyle\");\n$RefreshReg$(_c3, \"ItemStyle\");\n$RefreshReg$(_c4, \"Input\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Link","useNavigate","styled","useDispatch","useSelector","createBucket","deleteBucket","addDoc","collection","getDocs","db","bucket_data","querySnapshot","then","data","forEach","doc","exists","console","log","BucketList","navigate","dispatch","bucket_list","state","bucket","list","todoInput","addTodoDispatch","text","current","value","completed","map","index","ListStyle","div","ItemStyle","props","color","Input"],"sources":["/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/BucketList.js"],"sourcesContent":["// 리액트 패키지를 불러옵니다.\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// redux hook을 불러옵니다.\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createBucket, deleteBucket } from \"./redux/modules/bucket\";\n\nimport { addDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\nlet bucket_data = [];\nconst querySnapshot = getDocs(collection(db, \"bucket_list\"));\n\nquerySnapshot.then(async function (data) {\n    await data.forEach((doc) => {\n        if (doc.exists) {\n            bucket_data = [...bucket_data, { ...doc.data() }];\n        }\n        console.log(bucket_data);\n    });\n});\nconsole.log(\"나오나\", bucket_data);\n\nconst BucketList = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        console.log(\"컴포넌트가 화면에 나타남\");\n        return () => {\n            console.log(\"컴포넌트가 화면에서 사라짐\");\n        };\n    }, []);\n\n    // 버킷리스트를 리덕스 훅으로 가져오기\n    const bucket_list = useSelector((state) => state.bucket.list);\n\n    //const initialState = [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"];\n    //const [list, setList] = useState(initialState);\n    // const addTodo = () => {\n    //     setList([...list, todoInput.current.value]);\n    //     console.log(list)\n    // }\n\n    const todoInput = useRef();\n\n    const addTodoDispatch = () => {\n        //dispatch(createBucket(todoInput.current.value));\n        addDoc(collection(db, \"bucket_list\"), { text: todoInput.current.value, completed: false });\n        todoInput.current.value = \"\";\n    };\n\n    return (\n        <>\n            <ListStyle>\n                {console.log(bucket_data)}\n                {bucket_data.map((list, index) => {\n                    return (\n                        <ItemStyle\n                            key={index}\n                            className=\"list_item\"\n                            color={list.completed ? \"orange\" : \"aliceblue\"}\n                            onClick={() => {\n                                navigate(`detail?${index}`);\n                            }}\n                        >\n                            {list.text}\n                        </ItemStyle>\n                    );\n                })}\n            </ListStyle>\n            <Input>\n                <input type=\"text\" ref={todoInput} />\n                <button onClick={addTodoDispatch}>추가하기</button>\n            </Input>\n        </>\n    );\n};\n\nconst ListStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`;\n\nconst ItemStyle = styled.div`\n    padding: 16px;\n    margin: 8px;\n    background-color: ${(props) => props.color};\n`;\n\nconst Input = styled.div`\n    max-width: 350px;\n    min-height: 10vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n\nexport default BucketList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}