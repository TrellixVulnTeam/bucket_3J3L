{"ast":null,"code":"var _jsxFileName = \"/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/BucketList.js\",\n    _s = $RefreshSig$();\n\n// 리액트 패키지를 불러옵니다.\nimport React, { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\"; // redux hook을 불러옵니다.\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createBucket, isLoaded } from \"./redux/modules/bucket\";\nimport { addDoc, collection, doc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BucketList = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch(); // 버킷리스트를 리덕스 훅으로 가져오기\n\n  const bucket_list = useSelector(state => state.bucket.list); //const initialState = [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"];\n  //const [list, setList] = useState(initialState);\n  // const addTodo = () => {\n  //     setList([...list, todoInput.current.value]);\n  //     console.log(list)\n  // }\n  //console.log(\"나오나\", bucket_data);\n\n  const todoInput = useRef();\n\n  const addTodoDispatch = async () => {\n    const addData = await addDoc(collection(db, \"bucket_list\"), {\n      text: todoInput.current.value,\n      completed: false\n    }); //console.log(addData.id);\n\n    dispatch(createBucket({\n      id: addData.id,\n      text: todoInput.current.value\n    }));\n    dispatch(isLoaded(true));\n    todoInput.current.value = \"\";\n    todoInput.current.focus();\n  };\n\n  const enterPress = e => {\n    if (e.key === \"Enter\") {\n      addTodoDispatch();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListStyle, {\n      children: bucket_list.map((list, index) => {\n        return /*#__PURE__*/_jsxDEV(ItemStyle, {\n          className: \"list_item\",\n          color: list.completed ? \"orange\" : \"aliceblue\",\n          onClick: () => {\n            navigate(`detail?${index}`);\n          },\n          children: list.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: todoInput,\n        onKeyPress: enterPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodoDispatch,\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BucketList, \"dxfNHOJfLjk6W9PNDfasW9KAkGI=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = BucketList;\nconst ListStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`;\n_c2 = ListStyle;\nconst ItemStyle = styled.div`\n    padding: 16px;\n    margin: 8px;\n    background-color: ${props => props.color};\n`;\n_c3 = ItemStyle;\nconst Input = styled.div`\n    max-width: 350px;\n    min-height: 10vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n_c4 = Input;\nexport default BucketList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BucketList\");\n$RefreshReg$(_c2, \"ListStyle\");\n$RefreshReg$(_c3, \"ItemStyle\");\n$RefreshReg$(_c4, \"Input\");","map":{"version":3,"names":["React","useRef","useNavigate","styled","useDispatch","useSelector","createBucket","isLoaded","addDoc","collection","doc","db","BucketList","navigate","dispatch","bucket_list","state","bucket","list","todoInput","addTodoDispatch","addData","text","current","value","completed","id","focus","enterPress","e","key","map","index","ListStyle","div","ItemStyle","props","color","Input"],"sources":["/Users/jayonglee/00_Study/Javascript/spartaReact/bucketlist/src/BucketList.js"],"sourcesContent":["// 리액트 패키지를 불러옵니다.\nimport React, { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// redux hook을 불러옵니다.\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createBucket, isLoaded } from \"./redux/modules/bucket\";\n\nimport { addDoc, collection, doc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\nconst BucketList = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    // 버킷리스트를 리덕스 훅으로 가져오기\n    const bucket_list = useSelector((state) => state.bucket.list);\n\n    //const initialState = [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\"];\n    //const [list, setList] = useState(initialState);\n    // const addTodo = () => {\n    //     setList([...list, todoInput.current.value]);\n    //     console.log(list)\n    // }\n\n    //console.log(\"나오나\", bucket_data);\n\n    const todoInput = useRef();\n\n    const addTodoDispatch = async () => {\n        const addData = await addDoc(collection(db, \"bucket_list\"), { text: todoInput.current.value, completed: false });\n        //console.log(addData.id);\n        dispatch(createBucket({ id: addData.id, text: todoInput.current.value }));\n        dispatch(isLoaded(true));\n        todoInput.current.value = \"\";\n        todoInput.current.focus();\n    };\n\n    const enterPress = (e) => {\n        if (e.key === \"Enter\") {\n            addTodoDispatch();\n        }\n    };\n\n    return (\n        <>\n            <ListStyle>\n                {bucket_list.map((list, index) => {\n                    return (\n                        <ItemStyle\n                            key={index}\n                            className=\"list_item\"\n                            color={list.completed ? \"orange\" : \"aliceblue\"}\n                            onClick={() => {\n                                navigate(`detail?${index}`);\n                            }}\n                        >\n                            {list.text}\n                        </ItemStyle>\n                    );\n                })}\n            </ListStyle>\n            <Input>\n                <input type=\"text\" ref={todoInput} onKeyPress={enterPress} />\n                <button onClick={addTodoDispatch}>추가하기</button>\n            </Input>\n        </>\n    );\n};\n\nconst ListStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`;\n\nconst ItemStyle = styled.div`\n    padding: 16px;\n    margin: 8px;\n    background-color: ${(props) => props.color};\n`;\n\nconst Input = styled.div`\n    max-width: 350px;\n    min-height: 10vh;\n    background-color: #fff;\n    padding: 16px;\n    margin: 20px auto;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n`;\n\nexport default BucketList;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,wBAAvC;AAEA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,GAA7B,QAAwC,oBAAxC;AACA,SAASC,EAAT,QAAmB,YAAnB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAMY,QAAQ,GAAGV,WAAW,EAA5B,CAFqB,CAIrB;;EACA,MAAMW,WAAW,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA/B,CALqB,CAOrB;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,MAAMC,SAAS,GAAGlB,MAAM,EAAxB;;EAEA,MAAMmB,eAAe,GAAG,YAAY;IAChC,MAAMC,OAAO,GAAG,MAAMb,MAAM,CAACC,UAAU,CAACE,EAAD,EAAK,aAAL,CAAX,EAAgC;MAAEW,IAAI,EAAEH,SAAS,CAACI,OAAV,CAAkBC,KAA1B;MAAiCC,SAAS,EAAE;IAA5C,CAAhC,CAA5B,CADgC,CAEhC;;IACAX,QAAQ,CAACR,YAAY,CAAC;MAAEoB,EAAE,EAAEL,OAAO,CAACK,EAAd;MAAkBJ,IAAI,EAAEH,SAAS,CAACI,OAAV,CAAkBC;IAA1C,CAAD,CAAb,CAAR;IACAV,QAAQ,CAACP,QAAQ,CAAC,IAAD,CAAT,CAAR;IACAY,SAAS,CAACI,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;IACAL,SAAS,CAACI,OAAV,CAAkBI,KAAlB;EACH,CAPD;;EASA,MAAMC,UAAU,GAAIC,CAAD,IAAO;IACtB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;MACnBV,eAAe;IAClB;EACJ,CAJD;;EAMA,oBACI;IAAA,wBACI,QAAC,SAAD;MAAA,UACKL,WAAW,CAACgB,GAAZ,CAAgB,CAACb,IAAD,EAAOc,KAAP,KAAiB;QAC9B,oBACI,QAAC,SAAD;UAEI,SAAS,EAAC,WAFd;UAGI,KAAK,EAAEd,IAAI,CAACO,SAAL,GAAiB,QAAjB,GAA4B,WAHvC;UAII,OAAO,EAAE,MAAM;YACXZ,QAAQ,CAAE,UAASmB,KAAM,EAAjB,CAAR;UACH,CANL;UAAA,UAQKd,IAAI,CAACI;QARV,GACSU,KADT;UAAA;UAAA;UAAA;QAAA,QADJ;MAYH,CAbA;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAiBI,QAAC,KAAD;MAAA,wBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,GAAG,EAAEb,SAAxB;QAAmC,UAAU,EAAES;MAA/C;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,OAAO,EAAER,eAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBJ;EAAA,gBADJ;AAwBH,CAzDD;;GAAMR,U;UACeV,W,EACAE,W,EAGGC,W;;;KALlBO,U;AA2DN,MAAMqB,SAAS,GAAG9B,MAAM,CAAC+B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,S;AAQN,MAAME,SAAS,GAAGhC,MAAM,CAAC+B,GAAI;AAC7B;AACA;AACA,wBAAyBE,KAAD,IAAWA,KAAK,CAACC,KAAM;AAC/C,CAJA;MAAMF,S;AAMN,MAAMG,KAAK,GAAGnC,MAAM,CAAC+B,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMI,K;AAUN,eAAe1B,UAAf"},"metadata":{},"sourceType":"module"}