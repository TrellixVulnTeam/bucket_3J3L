{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jayonglee/00_Study/Javascript/spartaReact/week-1/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _objectSpread from\"/Users/jayonglee/00_Study/Javascript/spartaReact/week-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _templateObject;import React from\"react\";import styled from\"styled-components\";import img from\"../scc_img01.png\";import{jsx as _jsx}from\"react/jsx-runtime\";var SwipeItem=/*#__PURE__*/React.memo(function(_ref){var onSwipe=_ref.onSwipe;var swipe_div=React.useRef(null);var swipe_status=\"ready\";var target_classname=\"\";var coordinate={start_x:0,start_y:0,end_x:0,end_y:0};React.useEffect(function(){var reset=function reset(){//   console.log(\"in reset\");\nswipe_status=\"ready\";coordinate={start_x:0,start_y:0,end_x:0,end_y:0};swipe_div.current.className=target_classname;swipe_div.current.style.left=0+\"px\";swipe_div.current.style.top=0+\"px\";};var touchStart=function touchStart(e){//   console.log(\"start\");\n// 터치 시작 시, swipe_status를 touchstart로 변경해줍니다.\n// 그리고 터치 시작한 좌표를 기록합니다!\n// (중요! 그래야 터치 종료할 때 위치를 보고 왼쪽인지, 오른쪽인지 판별할 수 있겠죠!)\nswipe_status=\"touchstart\";target_classname=swipe_div.current.className;// console로 터치 이벤트가 시작될 때 좌표를 확인해볼까요?\n//   console.log(e.touches[0]);\n//   console.log(e.touches[0].clientX);\n//   console.log(e.touches[0].clientY);\n//   좌표도 기록해줍니다 :)\ncoordinate=_objectSpread(_objectSpread({},coordinate),{},{start_x:e.touches[0].clientX,start_y:e.touches[0].clientY});};var touchEnd=function touchEnd(e){swipe_status=\"touchend\";//  touchEnd이벤트는 touches 대신, changedTouches가 있어요.\n//   console.log(e.changedTouches[0]);\ncoordinate=_objectSpread(_objectSpread({},coordinate),{},{end_x:e.changedTouches[0].clientX,end_y:e.changedTouches[0].clientY});//   x좌표 이동 거리를 구해줍니다.\nvar diff_x=coordinate.end_x-coordinate.start_x;//   스와이프 방향 / 기본은 left로 뒀습니다!\nvar direct=\"left\";// Match.abs() : 절대값을 구해주는 친구입니다.\nif(Math.abs(diff_x)>50){swipe_div.current.className=target_classname+\" swipe\";// 움직인 방향에 따라 더 옴직이고 투명도를 0으로 (점점 사라지게) 줘봐요!\nif(diff_x>0){// console.log('move right');\ndirect=\"right\";swipe_div.current.style.left=diff_x+150+\"px\";swipe_div.current.style.opacity=0;}else{direct=\"left\";// console.log('move left');\n//   console.log(diff_x - 150);\nswipe_div.current.style.left=diff_x-150+\"px\";swipe_div.current.style.opacity=0;}// 300 ms후 reset 해줍니다!\n// 이 300ms는 props로 받아서 처리해줘도 좋겠네요!\n// props로 받아온, 콜백 함수도 여기서 처리해줄게요!\nwindow.setTimeout(function(){reset();onSwipe(direct);},300);return;}//   reset 해줍니다.\nreset();};var touchMove=function touchMove(e){// 스와이프 중 다른 이벤트가 발생하는 것을 막아줍니다\ne.preventDefault();//   console.log(\"in touch move!\");\n// 현재 좌표(이동 중인 좌표)를 기록해줍니다.\nvar current_coordinate={x:e.touches[0].clientX,y:e.touches[0].clientY};//   콘솔로 이동한 값이 어떻게 나오는 지 한번 확인해볼까요?\n//   console.log(\n//     current_coordinate.x - coordinate.start_x,\n//     current_coordinate.y - coordinate.start_y\n//   );\n//   터치 중일 때 div가 따라 움직이도록 해줍시다!\nswipe_div.current.style.left=current_coordinate.x-coordinate.start_x+\"px\";swipe_div.current.style.top=current_coordinate.y-coordinate.start_y+\"px\";};// 터치 이벤트가 취소될 경우 원래 상태로 돌려줍니다!\nvar touchCancel=function touchCancel(e){swipe_status=\"cancel\";reset();};swipe_div.current.addEventListener(\"touchstart\",touchStart);swipe_div.current.addEventListener(\"touchend\",touchEnd);swipe_div.current.addEventListener(\"touchmove\",touchMove);swipe_div.current.addEventListener(\"touchcancel\",touchCancel);// 이부분은 이벤트 해제 부분이에요!\nreturn function(){// 만약 이벤트 걸었던 엘리먼트가 없으면 해제하지 않습니다!\nif(!swipe_div.current){return;}swipe_div.current.removeEventListener(\"touchstart\",touchStart);swipe_div.current.removeEventListener(\"touchend\",touchEnd);swipe_div.current.removeEventListener(\"touchmove\",touchMove);swipe_div.current.removeEventListener(\"touchcancel\",touchCancel);};},[]);return/*#__PURE__*/_jsx(DragItem,{ref:swipe_div,children:/*#__PURE__*/_jsx(\"img\",{src:img})});});var DragItem=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100vw;\\n    height: 100vh;\\n\\n    &.swipe {\\n        transition: 300ms;\\n    }\\n\\n    & > div {\\n        border-radius: 500px;\\n        background-color: #ffd6aa;\\n    }\\n    & img {\\n        max-width: 150px;\\n    }\\n\"])));SwipeItem.defaultProps={onSwipe:function onSwipe(direction){}};export default SwipeItem;","map":{"version":3,"names":["React","styled","img","SwipeItem","memo","onSwipe","swipe_div","useRef","swipe_status","target_classname","coordinate","start_x","start_y","end_x","end_y","useEffect","reset","current","className","style","left","top","touchStart","e","touches","clientX","clientY","touchEnd","changedTouches","diff_x","direct","Math","abs","opacity","window","setTimeout","touchMove","preventDefault","current_coordinate","x","y","touchCancel","addEventListener","removeEventListener","DragItem","div","defaultProps","direction"],"sources":["/Users/jayonglee/00_Study/Javascript/spartaReact/week-1/src/components/SwipeItem.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport img from \"../scc_img01.png\";\n\nconst SwipeItem = React.memo(({ onSwipe }) => {\n    const swipe_div = React.useRef(null);\n    let swipe_status = \"ready\";\n    let target_classname = \"\";\n    let coordinate = {\n        start_x: 0,\n        start_y: 0,\n        end_x: 0,\n        end_y: 0,\n    };\n\n    React.useEffect(() => {\n        const reset = () => {\n            //   console.log(\"in reset\");\n            swipe_status = \"ready\";\n\n            coordinate = {\n                start_x: 0,\n                start_y: 0,\n                end_x: 0,\n                end_y: 0,\n            };\n\n            swipe_div.current.className = target_classname;\n\n            swipe_div.current.style.left = 0 + \"px\";\n            swipe_div.current.style.top = 0 + \"px\";\n        };\n\n        const touchStart = (e) => {\n            //   console.log(\"start\");\n\n            // 터치 시작 시, swipe_status를 touchstart로 변경해줍니다.\n            // 그리고 터치 시작한 좌표를 기록합니다!\n            // (중요! 그래야 터치 종료할 때 위치를 보고 왼쪽인지, 오른쪽인지 판별할 수 있겠죠!)\n            swipe_status = \"touchstart\";\n            target_classname = swipe_div.current.className;\n            // console로 터치 이벤트가 시작될 때 좌표를 확인해볼까요?\n            //   console.log(e.touches[0]);\n            //   console.log(e.touches[0].clientX);\n            //   console.log(e.touches[0].clientY);\n\n            //   좌표도 기록해줍니다 :)\n            coordinate = {\n                ...coordinate,\n                start_x: e.touches[0].clientX,\n                start_y: e.touches[0].clientY,\n            };\n        };\n\n        const touchEnd = (e) => {\n            swipe_status = \"touchend\";\n            //  touchEnd이벤트는 touches 대신, changedTouches가 있어요.\n            //   console.log(e.changedTouches[0]);\n            coordinate = {\n                ...coordinate,\n                end_x: e.changedTouches[0].clientX,\n                end_y: e.changedTouches[0].clientY,\n            };\n\n            //   x좌표 이동 거리를 구해줍니다.\n            let diff_x = coordinate.end_x - coordinate.start_x;\n            //   스와이프 방향 / 기본은 left로 뒀습니다!\n            let direct = \"left\";\n\n            // Match.abs() : 절대값을 구해주는 친구입니다.\n            if (Math.abs(diff_x) > 50) {\n                swipe_div.current.className = target_classname + \" swipe\";\n\n                // 움직인 방향에 따라 더 옴직이고 투명도를 0으로 (점점 사라지게) 줘봐요!\n                if (diff_x > 0) {\n                    // console.log('move right');\n                    direct = \"right\";\n                    swipe_div.current.style.left = diff_x + 150 + \"px\";\n                    swipe_div.current.style.opacity = 0;\n                } else {\n                    direct = \"left\";\n                    // console.log('move left');\n                    //   console.log(diff_x - 150);\n                    swipe_div.current.style.left = diff_x - 150 + \"px\";\n                    swipe_div.current.style.opacity = 0;\n                }\n\n                // 300 ms후 reset 해줍니다!\n                // 이 300ms는 props로 받아서 처리해줘도 좋겠네요!\n                // props로 받아온, 콜백 함수도 여기서 처리해줄게요!\n                window.setTimeout(() => {\n                    reset();\n                    onSwipe(direct);\n                }, 300);\n                return;\n            }\n\n            //   reset 해줍니다.\n            reset();\n        };\n\n        const touchMove = (e) => {\n            // 스와이프 중 다른 이벤트가 발생하는 것을 막아줍니다\n            e.preventDefault();\n\n            //   console.log(\"in touch move!\");\n            // 현재 좌표(이동 중인 좌표)를 기록해줍니다.\n            let current_coordinate = {\n                x: e.touches[0].clientX,\n                y: e.touches[0].clientY,\n            };\n\n            //   콘솔로 이동한 값이 어떻게 나오는 지 한번 확인해볼까요?\n            //   console.log(\n            //     current_coordinate.x - coordinate.start_x,\n            //     current_coordinate.y - coordinate.start_y\n            //   );\n\n            //   터치 중일 때 div가 따라 움직이도록 해줍시다!\n            swipe_div.current.style.left = current_coordinate.x - coordinate.start_x + \"px\";\n            swipe_div.current.style.top = current_coordinate.y - coordinate.start_y + \"px\";\n        };\n\n        // 터치 이벤트가 취소될 경우 원래 상태로 돌려줍니다!\n        const touchCancel = (e) => {\n            swipe_status = \"cancel\";\n            reset();\n        };\n\n        swipe_div.current.addEventListener(\"touchstart\", touchStart);\n        swipe_div.current.addEventListener(\"touchend\", touchEnd);\n        swipe_div.current.addEventListener(\"touchmove\", touchMove);\n        swipe_div.current.addEventListener(\"touchcancel\", touchCancel);\n\n        // 이부분은 이벤트 해제 부분이에요!\n        return () => {\n            // 만약 이벤트 걸었던 엘리먼트가 없으면 해제하지 않습니다!\n            if (!swipe_div.current) {\n                return;\n            }\n            swipe_div.current.removeEventListener(\"touchstart\", touchStart);\n            swipe_div.current.removeEventListener(\"touchend\", touchEnd);\n            swipe_div.current.removeEventListener(\"touchmove\", touchMove);\n            swipe_div.current.removeEventListener(\"touchcancel\", touchCancel);\n        };\n    }, []);\n\n    return (\n        <DragItem ref={swipe_div}>\n            <img src={img} />\n        </DragItem>\n    );\n});\n\nconst DragItem = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n\n    &.swipe {\n        transition: 300ms;\n    }\n\n    & > div {\n        border-radius: 500px;\n        background-color: #ffd6aa;\n    }\n    & img {\n        max-width: 150px;\n    }\n`;\n\nSwipeItem.defaultProps = {\n    onSwipe: (direction) => {},\n};\n\nexport default SwipeItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}